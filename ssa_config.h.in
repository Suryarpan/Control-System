#ifndef _SSA_CONFIG_H_
#define _SSA_CONFIG_H_

/* Enable various intrinsics */
/* SIMD */
#cmakedefine HAVE_SIMD
/* AVX-512F */
#cmakedefine HAVE_AVX512F
/* FMA */
#cmakedefine HAVE_FMA
/* AVX-2 */
#cmakedefine HAVE_AVX2
/* AVX */
#cmakedefine HAVE_AVX
/* SSE-2 */
#cmakedefine HAVE_SSE2
/* SSE */
#cmakedefine HAVE_SSE

/* Check for headers */
/* immintrin.h */
#cmakedefine HAVE_IMMINTRIN_H
/* emmintrin.h */
#cmakedefine HAVE_EMMINTRIN_H
/* malloc.h */
#cmakedefine HAVE_MALLOC_H
/* stddef.h */
#cmakedefine HAVE_STDDEF_H
/* stdlib.h */
#cmakedefine HAVE_STDLIB_H
/* time.h */
#cmakedefine HAVE_TIME_H
/* stdarg.h */
#cmakedefine HAVE_STDARG_H
/* math.h */
#cmakedefine HAVE_MATH_H

/* Check for symbols */
/* time() from time.h */
#cmakedefine HAVE_TIME
/* localtime() from time.h */
#cmakedefine HAVE_LOCALTIME
/* strftime() from time.h */
#cmakedefine HAVE_STRFTIME
/* isnan() from math.h */
#cmakedefine HAVE_ISNAN
/* abort() from stdlib.h */
#cmakedefine HAVE_ABORT

/* Check symbols with declarations */
/* memalign */
#cmakedefine HAVE_MEMALIGN
/* declaration of memalign */
#cmakedefine HAVE_DECL_MEMALIGN

#if (defined(HAVE_MEMALIGN) && defined(HAVE_DECL_MEMALIGN))
#  define USE_MEMALIGN 1
#endif /* !MEMALIGN */

/* posix_memalign */
#cmakedefine HAVE_POSIX_MEMALIGN
/* declaration of posix_memalign */
#cmakedefine HAVE_DECL_POSIX_MEMALIGN

#if (defined(HAVE_POSIX_MEMALIGN) && defined(HAVE_DECL_POSIX_MEMALIGN))
#  define USE_POSIX_MEMALIGN 1
#endif /* POSIX_MEMALIGN */

#ifdef HAVE_SIMD
#  define ALIGN_TO @ALIGNMENT@
#endif

#define SSA_VERSION @SSA_VERSION@

#define SSA_MAJOR_VERSION @SSA_VERSION_MAJOR@

#define SSA_MINOR_VERSION @SSA_VERSION_MINOR@

#define SSA_PATCH_VERSION @SSA_VERSION_PATCH@

#define SSA_VERSION_S "@SSA_VERSION@"

#define SSA_ENCODE_VERSION(major, minor,patch) \
    ((major) << 24 | (minor) << 16 | (patch) << 8)

#define SSA_VERSION_HEX \
    (SSA_VERSION_ENCODE(SSA_MAJOR_VERSION, SSA_MINOR_VERSION, SSA_PATCH_VERSION))

#define SSA_CHECK_VERSION(major,minor,patch)   \
        (SSA_MAJOR_VERSION > (major) || \
         (SSA_MAJOR_VERSION == (major) && SSA_MINOR_VERSION > (minor)) || \
         (SSA_MAJOR_VERSION == (major) && SSA_MINOR_VERSION == (minor) && \
          SSA_PATCH_VERSION >= (patch)))

#endif /* !_SSA_CONFIG_H_ */